service: type-script-contact
frameworkVersion: '3'

custom:
  stage: ${opt:stage,self:provider.stage}
  region: ${opt:region,self:provider.region}
  app: type-script-contact

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-2
  apiGateway:
    shouldStartNameWithService: true
  environment: ${file(env.${self:custom.stage}.json)}

package:
  individually: true
  patterns:
    - '!.serverless/**'
    - '!.git/**'
    - '!*.md'
    - '!env.json'
    - '!env.*.json'

functions:
  app:
    handler: src/main.main
    name: ${self:service}-${self:provider.stage}
    memorySize: 128
    timeout: 30
    package:
      patterns:
        - '!package*'
        - '!node_modules/**'
        - '!src-ts/**'
        - '!tsconfig.json'
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Amz-Security-Token
            allowCredentials: false
    layers:
      - { Ref: ApiLayerLambdaLayer }

layers:
  apiLayer:
    path: layers/type-script
    name: ${self:functions.app.name}-layers
    description: Layer para el api my king
    compatibleRuntimes:
      - nodejs14.x
plugins:
  - serverless-offline


